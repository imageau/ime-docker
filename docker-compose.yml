x-back-settings: &back-settings
    build:
        context: ./
        dockerfile: ./config/back.dockerfile
        args:
            ENV: ${ENV}
            BACK_PATH: ${BACK_PATH}
    extra_hosts:
        - storage.${TOOLS_DOMAIN}:host-gateway
    environment:
        APP_URL: 'https://${BACK_DOMAIN}'
        JWT_DOMAIN: '.${FRONT_DOMAIN}'
        FRONTEND_URL: 'https://${FRONT_DOMAIN}'
        DB_CONNECTION: mysql
        DB_HOST: db
        DB_PORT: 3306
        DB_DATABASE: ${DB_DATABASE}
        DB_USERNAME: ${DB_USERNAME}
        DB_PASSWORD: ${DB_PASSWORD}
        REDIS_HOST: redis
        QUEUE_CONNECTION: redis
    volumes:
        - ${BACK_PATH}/.env:/var/www/.env
        - caddy_data:/etc/caddy_data
    depends_on:
        - caddy
        - db
        - redis
        - minio

services:
    back:
        <<: *back-settings

    horizon:
        <<: *back-settings
        command: sh -c "/setup-certs.sh && php artisan horizon"
        depends_on:
            back:
                condition: service_healthy

    front:
        build:
            context: ./
            dockerfile: ./config/front.dockerfile
            args:
                ENV: ${ENV}
                FRONT_PATH: ${FRONT_PATH}
        extra_hosts:
            - ${BACK_DOMAIN}:host-gateway
        volumes:
            - ${FRONT_PATH}/.env:/app/.env
            - pnpm_store:/app/.pnpm-store
        environment:
            NEXT_PUBLIC_API_URL: 'https://${BACK_DOMAIN}'
            PROXY_URL: 'https://${BACK_DOMAIN}'
            ENV: ${ENV}
        depends_on:
            caddy:
                condition: service_started
            back:
                condition: service_healthy

    caddy:
        image: caddy:alpine
        ports:
            - 80:80
            - 443:443
        volumes:
            - ${BACK_PATH}:/srv/back
            - ./config/Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
        environment:
            TLS_CONFIG: ${TLS_CONFIG}
            FRONT_DOMAIN: ${FRONT_DOMAIN}
            BACK_DOMAIN: ${BACK_DOMAIN}
            TOOLS_DOMAIN: ${TOOLS_DOMAIN}
            INDEX_PATH: ${INDEX_PATH}

    db:
        image: mysql:8.0
        volumes:
            - db_data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}

    adminer:
        image: adminer

    redis:
        image: redis:alpine

    minio:
        image: minio/minio
        command: minio server /data/minio --console-address ":9001"
        environment:
            MINIO_ROOT_USER: minio
            MINIO_ROOT_PASSWORD: password
        volumes:
            - minio_data:/data/minio

volumes:
    db_data:
    caddy_data:
    caddy_config:
    pnpm_store:
    minio_data:
